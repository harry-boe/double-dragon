# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

[include mainsail.cfg]
[include toolhead0.cfg]
[include toolhead1.cfg]
#[include builtin_extruder0.cfg]
#[include builtin_extruder1.cfg]


[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
# Starts as: serial: /dev/serial/by-id/usb-STMicroelectronics_BIGTREE_OCTOPUS_CDC_in_FS_Mode_204331844E53-if00
# After first build:
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_360012000650534E4E313120-if00
restart_method: command
##--------------------------------------------------------------------

#[force_move]
#enable_force_move:true

# Intentionally slow until limits are determined and stepper currents are set correctly.
[printer]
kinematics: hybrid_corexy
max_velocity: 100
max_accel: 1000
max_z_velocity: 40
max_z_accel: 200
square_corner_velocity: 5.0

#####################################################################
#   X Steppers
#####################################################################

##  Right Extruder X motor (when looking at the front)
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200
# Uncomment below if using direct inputs on Octo
# endstop_pin: ^PG6#
endstop_pin: head0:PA1

position_min: 4
position_endstop: 169
position_max: 169

homing_speed: 50
homing_retract_dist: 3
second_homing_speed: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 0.7
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 500

##  Left Extruder X motor (when looking at the front)
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[dual_carriage]
axis: x
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200
# Uncomment below if using direct inputs on Octo
#endstop_pin: ^PG10
endstop_pin: head1:PA1
position_min: -51
position_endstop: -50.25
position_max: 116

homing_speed: 50
homing_retract_dist: 3
second_homing_speed: 5
homing_positive_dir: false

[tmc2209 dual_carriage]
uart_pin: PC6
interpolate: false
run_current: 0.7
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 500

##--------------------------------------------------------------------
##  Right Y motor (when looking at the front)
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200
endstop_pin: ^PG9
position_min: 0
position_endstop: 120
position_max: 120

homing_speed: 50  #Max 100
homing_retract_dist: 3
second_homing_speed: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 0.45
sense_resistor: 0.110
stealthchop_threshold: 500

##  Left Y motor (when looking at the front)
##  Connected to MOTOR_3
##  Endstop connected to DIAG_3
[stepper_y1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200
endstop_pin: ^PG11

[tmc2209 stepper_y1]
uart_pin: PC7
interpolate: false
run_current: 0.45
sense_resistor: 0.110
stealthchop_threshold: 500

#####################################################################
#   Z Stepper Settings
#####################################################################

## Z Stepper
##  Connected to MOTOR_4
##  Endstop connected to DIAG_4
[stepper_z]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2

rotation_distance: 32
# Change this for your Z setup.
# This shows the ratio for one MCMBen Block-and-Tackle setup
gear_ratio: 96:16
microsteps: 32
endstop_pin: ^PG12
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
position_endstop: 0
position_max: 120

position_min: -5
homing_speed: 15
second_homing_speed: 3
homing_retract_dist: 2
homing_positive_dir: false

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PF2
interpolate: false
run_current: 0.4
hold_current: 0.3
sense_resistor: 0.110
stealthchop_threshold: 500

[bed_screws]
screw1: 60, 10
screw1_name: front
screw2: 10, 110
screw2_name: rear left
screw3: 110, 110
screw3_name: rear right
horizontal_move_z: 5
speed: 150
probe_speed: 5

#####################################################################
# Source for below: https://github.com/Klipper3d/klipper/blob/master/config/sample-idex.cfg#L5
#
# Manually merged with: https://github.com/charlespick/klipper/blob/work-dual-car-docs-20210721/config/sample-idex.cfg

# Helper script to park the carriage (called from T0 and T1 macros)
[gcode_macro PARK_extruder]
gcode:
    SAVE_GCODE_STATE NAME=park0
    G90
    G1 X168 F12000
    RESTORE_GCODE_STATE NAME=park0

# Activate the primary extruder
[gcode_macro T0]
variable_offset_applied: 0
gcode:
    {% set svv = printer.save_variables.variables %}
    {% if "x" in printer.toolhead.homed_axes %} # this check ensures compatibility with Cura
        PARK_{printer.toolhead.extruder}
    {% endif %}
    {% set fan_speed = printer["gcode_macro M106"].swap_speed %}
      {% if fan_speed != -1 %}
        SET_FAN_SPEED FAN=fan_extruder SPEED={fan_speed}
      {% else %}
        # Update core Klipper's fan speed to the fan speed of the active toolhead
        # Only do this if you have a sacrificial [fan] section
        #M106.1 S{printer["fan_generic fan_extruder"].speed * 255}
    {% endif %}
    ACTIVATE_EXTRUDER EXTRUDER=extruder
    SET_DUAL_CARRIAGE CARRIAGE=0
    {% if printer["gcode_macro T0"].offset_applied == 1 %}
        SET_GCODE_OFFSET  X_ADJUST={ -(svv.xoffset) } Y_ADJUST={ -(svv.yoffset) }
        SET_GCODE_OFFSET Z_ADJUST={ -(svv.zoffset) } MOVE=1
        SET_GCODE_VARIABLE MACRO=T0 VARIABLE=offset_applied VALUE=0
    {% endif %}
#    SET_INPUT_SHAPER if necessary, reset the input shaper after using the second extruder

[gcode_macro PARK_extruder1]
gcode:
    SAVE_GCODE_STATE NAME=park1
    G90
    G1 X-50 F12000
    RESTORE_GCODE_STATE NAME=park1

[gcode_macro T1]
gcode:
    {% set svv = printer.save_variables.variables %}
    {% if "x" in printer.toolhead.homed_axes %} # this check ensures compatibility with Cura
        PARK_{printer.toolhead.extruder}
    {% endif %}
    {% set fan_speed = printer["gcode_macro M106"].swap_speed %}
      {% if fan_speed != -1 %}
        SET_FAN_SPEED FAN=fan_extruder1 SPEED={fan_speed}
      {% else %}
        # Update core Klipper's fan speed to the fan speed of the active toolhead
        # Only do this if you have a sacrificial [fan] section
        #M106.1 S{printer["fan_generic fan_extruder1"].speed * 255}
    {% endif %}
    ACTIVATE_EXTRUDER EXTRUDER=extruder1
    SET_DUAL_CARRIAGE CARRIAGE=1
    {% if printer["gcode_macro T0"].offset_applied == 0 %}
        SET_GCODE_OFFSET  X_ADJUST={ svv.xoffset } Y_ADJUST={ svv.yoffset }
        SET_GCODE_OFFSET Z_ADJUST={ svv.zoffset } MOVE=1
        SET_GCODE_VARIABLE MACRO=T0 VARIABLE=offset_applied VALUE=1
    {% endif %}
#    SET_INPUT_SHAPER if necessary, update input shaping for the second carraige

# YOU MUST CALIBRATE YOUR ROTATION_DISTANCE BEFORE THIS IS USEFUL!!!
# Configure this to draw 2 line segments perpendicular to the dual_carraige axis
# that meet in the middle of the bed. Both lines should have the same coordinate
# on the axis of the dual_carraige. If they don't print inline, adjust your endstop
# settings.
[gcode_macro set_separation]
gcode:
    {% set svv = printer.save_variables.variables %}

    {% set oldX = svv.xoffset|float %}
    {% set oldY = svv.yoffset|float %}
    {% set oldZ = svv.zoffset|float %}

    {% if params.X is defined %}
        SAVE_VARIABLE VARIABLE=xoffset VALUE={ params.X|float }
    {% endif %}

    {% if params.Y is defined %}
        SAVE_VARIABLE VARIABLE=yoffset VALUE={ params.Y|float }
    {% endif %}

    {% if params.Z is defined %}
        SAVE_VARIABLE VARIABLE=zoffset VALUE={ params.Z|float }
    {% endif %}

    {% if params.X_ADJUST is defined %}
        {% set newX = params.X_ADJUST|float + oldX %}
        SAVE_VARIABLE VARIABLE=xoffset VALUE={ newX|float }
    {% endif %}

    {% if params.Y_ADJUST is defined %}
        {% set newY = params.Y_ADJUST|float + oldY %}
        SAVE_VARIABLE VARIABLE=yoffset VALUE={ newY|float }
    {% endif %}

    {% if params.Z_ADJUST is defined %}
        {% set newZ = params.Z_ADJUST|float + oldZ %}
        SAVE_VARIABLE VARIABLE=yoffset VALUE={ newZ|float }
    {% endif %}


[gcode_macro calibrate_separation]
gcode:
    G28
    G90
    M83
    T0 ; test T0
    G1 X60 Y115 Z.2 F12000
    G1 Y60 E8 F1000
    T1 ; test T1
    G1 X60 Y5 Z.2 F12000
    G1 Y60 E8 F1000
    G1 X-49 F12000

# # ?
# # For completeness, you can add a [fan] section with an unused pin
# [fan]
# pin: rpi:gpio20

[gcode_macro M106]
# Only rename_existing if you have a sacrificial [fan] section
#rename_existing: M106.1
# The variable that controls fan speed swopping if not specifying P parameter
# -1 means the control is disabled, a value of 0-1 is the requested fan speed.
# Access via {printer["gcode_macro M106"].swap_speed}
variable_swap_speed: -1
gcode:
    {% set s = [[params.S|default(255)|int, 255]|min, 0]|max %}
    {% set p = params.P|default(-1)|int %}
    {% set speed = s / 255 %}

    # Set speed to -1 by default
    SET_GCODE_VARIABLE MACRO=M106 VARIABLE=swap_speed VALUE=-1

    {% if p == -1 %}
      # Set current active extruder fan
      {% if speed == 0 %}
        # Always turn off al fans if S0 is specified without a specific fan
        SET_FAN_SPEED FAN=fan_extruder SPEED=0
        SET_FAN_SPEED FAN=fan_extruder1 SPEED=0
      {% else %}
        # Opt into fan speed swop control
        SET_GCODE_VARIABLE MACRO=M106 VARIABLE=swap_speed VALUE={speed}
        SET_FAN_SPEED FAN=fan_{printer.toolhead.extruder} SPEED={speed}
      {% endif %}
    {% else %}
      # Set specified active extruder fan
      {% if p == 0 %}
        SET_FAN_SPEED FAN=fan_extruder SPEED={speed}
      {% else %}
        SET_FAN_SPEED FAN=fan_extruder1 SPEED={speed}
      {% endif %}
    {% endif %}

    # Update core Klipper's fan speed
    # Only do this if you have a sacrificial [fan] section
    #M106.1 S{s}

[gcode_macro M107]
#rename_existing: M107.1
gcode:
    {% set p = params.P|default(-1)|int %}
    M106 S0 P{p}

[save_variables]
filename: ~/klipper_config/variables.klip
# this is used for saving and restoring the idex offsets
# create the file and insert the folloring content (without the #) to start
#
# [Variables]
# xoffset = 0.0
# yoffset = 0.0
# zoffset = 0.0

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
heater_pin: PC0     # PWR_DET
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: Generic 3950
#sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PF3     # Thermistor - TB
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 1.0
smooth_time: 3.0
min_temp: -200
max_temp: 120
control: pid
pid_kp = 30.935
pid_ki = 1.599
pid_kd = 149.649

#####################################################################
#   Fan Control
#####################################################################

# SET_FAN_SPEED FAN=config_name SPEED=<speed>
[fan_generic nevermore]
pin: PA8   # FAN0
kick_start_time: 0.5

# !!!!
# [controller_fan controller_fan]
# ##  Controller fan - FAN2
# pin: PD12
# kick_start_time: 0.5
# heater: heater_bed

#[heater_fan exhaust_fan]
##  Exhaust fan - FAN3
#pin: PD13
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

#####################################################################
#    Temperature Sensors
#####################################################################
# [temperature_sensor head0_x_stepper]
# sensor_type: NTC 100K beta 3950
# sensor_pin: PF4
# min_temp: -200
# max_temp: 150

# [temperature_sensor head1_x_stepper]
# sensor_type: NTC 100K beta 3950
# sensor_pin: PF5
# min_temp: -200
# max_temp: 150

# [temperature_sensor left_y_stepper]
# sensor_type: NTC 100K beta 3950
# sensor_pin: PF6
# min_temp: -200
# max_temp: 150

# [temperature_sensor right_y_stepper]
# sensor_type: NTC 100K beta 3950
# sensor_pin: PF7
# min_temp: -200
# max_temp: 150

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

# [safe_z_home]
# ##  XY Location of the Z Endstop Switch
# ##  Update -10,-10 to the XY coordinates of your endstop pin 
# ##  (such as 157,305) after going through Z Endstop Pin
# ##  Location Definition step.
# home_xy_position:-10,-10
# speed:100
# z_hop:5

# #--------------------------------------------------------------------
# speed: 100
# horizontal_move_z: 10
# retries: 5
# retry_tolerance: 0.0075
# max_adjust: 10

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Macros
#####################################################################

[gcode_macro CENTER]
gcode:
  G90
  G0 Z3
  G0 X60 Y60 F5000

[gcode_macro G32]
gcode:
    #BED_MESH_CLEAR
    G28
   
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    G32                            ; home all axes
    G90
    G3 Z1 F600                     ; move nozzle away from bed
   

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F3600                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    #BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END


[gcode_macro MOTORS_OFF]
gcode:
    M18
